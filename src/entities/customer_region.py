# from src.base.table_base import TableBase
#
#
# class CustomerRegion(TableBase):
#     __table_name__ = "customerregion"
#     __drop_script__ = ""
#     __create_script__ = "create table \"customerregion\" (\"customerid\" INTEGER ,\"regionid\" INTEGER ,PRIMARY KEY (\"customerid\", \"regionid\")); CREATE INDEX \"customeregion_customer_IDX\" ON \"customerregion\" (\"customerid\");CREATE INDEX \"customeregion_region_IDX\" ON \"customerregion\" (\"regionid\");"
#     __table_exists_script__ = "SELECT name FROM sqlite_schema WHERE type='table' and name = 'customerregion'"
#     __table_count_script__ = "select count(*) from \"customerregion\""
#     __insert_script__ = "insert into \"customerregion\" (\"customerid\", \"regionid\") values (:customerid, :regionid);"
#     __update_script__ = ""
#     __delete_script__ = "delete from \"customerregion\" where \"customerid\" = :customerid and \"regionid\" = :regionid;"
#     __fetch_by_id_script__ = "select \"customerid\", \"regionid\" from \"customerregion\" where \"customerid\" = :customerid and \"regionid\" = :regionid;"
#     __item_exists_script__ = "select count(*) from \"customerregion\" where \"customerid\" = :customerid and \"regionid\" = :regionid;"
#
#     customer_id: int = 0
#     region_id: int = 0
#
#     def __init__(self, customer_id: int = 0, region_id: int = 0,):
#         self.customer_id = customer_id
#         self.region_id = region_id
#
#     def map_row(self, row) -> TableBase:
#         self.customer_id = row[0]
#         self.region_id = row[1]
#         return self
#
#     def get_insert_params(self) -> {}:
#         return {"customerid": self.customer_id, "regionid": self.region_id}
#
#     def get_update_params(self) -> {}:
#         return {}
#
# # end-autogenerated
