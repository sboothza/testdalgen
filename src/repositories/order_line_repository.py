from src.base.session import Session
from src.base.repository_base import RepositoryBase
import entities.entities


class OrderLineRepository(RepositoryBase):
    __table__ = entities.entities.OrderLine

    def __init__(self):
        ...

    def get_by_id(self, session: Session, id: int):
        item: entities.entities.OrderLine = self._get_by_id(session, {"id": id})
        return item

    def exists(self, session: Session, id: int):
        return self._item_exists(session, {"id": id})

    def delete(self, session: Session, id: int):
        self._delete(session, {"id": id})

    def add(self, session: Session, item: entities.entities.OrderLine):
        id = self._execute_lastrowid(session, item.__insert_script__, item.get_insert_params())
        item.id = id

    def get_for_order(self, session: Session, item: entities.entities.Order):
        result = self.fetch(session, "select \"id\", \"orderid\", \"productid\", \"quantity\", \"price\" from "
                                     "\"orderline\" where \"orderid\" = :orderid;", {"orderid": item.id})
        return result

# end-autogenerated
